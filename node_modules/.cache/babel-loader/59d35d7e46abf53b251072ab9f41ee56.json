{"ast":null,"code":"import _regeneratorRuntime from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/NukeZ/avata-coding-challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import Autocomplete from 'react-autocomplete';\n\nimport Select from 'react-select';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      searchText: '',\n      searchSuggestionsArr: [{\n        label: 'apple',\n        value: 'apple'\n      }, {\n        label: 'banana',\n        value: 'banana'\n      }, {\n        label: 'pear',\n        value: 'pear'\n      }, {\n        label: 'appless',\n        value: 'appless'\n      }, {\n        label: 'bananas',\n        value: 'bananas'\n      }, {\n        label: 'pears',\n        value: 'pears'\n      }],\n      searchResultsArr: []\n    };\n\n    _this.onChangeSearchText = function () {\n      var searchSuggestionsArr = [];\n      var noAutoCompleteDuplicateObj = {};\n      var searchResultsArr = [];\n\n      for (var i = 1; i <= _this.state.searchResultsArr.length - 1; i++) {\n        var addToSearchResultsArr = false;\n\n        if (_this.state.searchResultsArr[i].author.includes(_this.state.searchText)) {\n          searchSuggestionsArr.push({\n            label: _this.state.searchResultsArr[i].author\n          });\n          addToSearchResultsArr = true;\n        }\n\n        if (_this.state.searchResultsArr[i].title.includes(_this.state.searchText)) {\n          searchSuggestionsArr.push({\n            label: _this.state.searchResultsArr[i].title\n          });\n          addToSearchResultsArr = true;\n        }\n\n        if (_this.state.searchResultsArr[i].review_score.includes(_this.state.searchText)) {\n          searchSuggestionsArr.push({\n            label: _this.state.searchResultsArr[i].review_score\n          });\n          addToSearchResultsArr = true;\n        }\n\n        if (addToSearchResultsArr) searchResultsArr.push(_this.state.searchResultsArr);\n      }\n    };\n\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, searchResultsArr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/express_backend');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n              searchResultsArr = [];\n              axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/').then(function (res) {\n                console.log(res.data.results);\n\n                for (var i = 0; i <= res.data.results.length - 1; i++) {\n                  if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n                } //display top 100 books whose score are higher than 75\n                //if there are more than 100 results take the highest scores\n\n\n                if (searchResultsArr.length > 100) {\n                  searchResultsArr.sort(function (a, b) {\n                    if (a.review_score < b.review_score) return -1;\n                    if (a.review_score > b.review_score) return 1;\n                    return 0;\n                  }); //cut off elements not in highest 100 scores\n\n                  searchResultsArr.splice(100);\n                } //this is to sort by title\n\n\n                searchResultsArr.sort(function (a, b) {\n                  if (a.title < b.title) return -1;\n                  if (a.title > b.title) return 1;\n                  return 0;\n                });\n\n                _this.setState({\n                  searchResultsArr: searchResultsArr\n                });\n\n                console.log(_this.state.searchResultsArr);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n              if (!(response.status !== 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 10:\n              return _context.abrupt(\"return\", body);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Welcome to React!\"), React.createElement(Select, {\n        value: this.state.searchText,\n        onChange: function onChange(e) {\n          _this3.setState({\n            searchText: e.target.value\n          });\n\n          console.log(_this3.state.searchText);\n        },\n        options: this.state.searchSuggestionsArr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.data));\n    }\n  }]);\n\n  return App;\n}(Component); // <Autocomplete\n//   getItemValue={(item) => item.label}\n//   items={this.state.searchSuggestionsArr}\n//   renderItem={(item, isHighlighted) =>\n//     <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n//       {item.label}\n//     </div>\n//   }\n//   value={this.state.searchText}\n//   onChange={(e) => {this.setState({ searchText : e.target.value }); console.log(this.state.searchText);}}\n//   onSelect={(val) => this.setState({ searchText : val })}\n//   />\n\n\nexport default App;","map":{"version":3,"sources":["/Users/NukeZ/avata-coding-challenge/client/src/App.js"],"names":["React","Component","axios","Select","App","state","data","searchText","searchSuggestionsArr","label","value","searchResultsArr","onChangeSearchText","noAutoCompleteDuplicateObj","i","length","addToSearchResultsArr","author","includes","push","title","review_score","callBackendAPI","fetch","response","json","body","post","then","res","console","log","results","sort","a","b","splice","setState","catch","error","status","Error","message","express","err","logo","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n// import Autocomplete from 'react-autocomplete';\nimport Select from 'react-select';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: null,\n    searchText: '',\n    searchSuggestionsArr: [\n      { label: 'apple', value: 'apple' },\n      { label: 'banana', value: 'banana' },\n      { label: 'pear', value: 'pear' },\n      { label: 'appless', value: 'appless' },\n      { label: 'bananas', value: 'bananas' },\n      { label: 'pears', value: 'pears' },\n    ],\n    searchResultsArr: [],\n  };\n\n  // this.onChangeSearchText = this.onChangeSearchText.bind(this);\n\n  onChangeSearchText = () => {\n    const searchSuggestionsArr = [];\n    const noAutoCompleteDuplicateObj ={};\n    const searchResultsArr = [];\n    for (let i = 1; i <= this.state.searchResultsArr.length - 1; i++) {\n      let addToSearchResultsArr = false;\n      if (this.state.searchResultsArr[i].author.includes(this.state.searchText)) {\n        searchSuggestionsArr.push({ label: this.state.searchResultsArr[i].author });\n        addToSearchResultsArr = true;\n      }\n      if (this.state.searchResultsArr[i].title.includes(this.state.searchText)) {\n        searchSuggestionsArr.push({ label: this.state.searchResultsArr[i].title });\n        addToSearchResultsArr = true;\n      }\n      if (this.state.searchResultsArr[i].review_score.includes(this.state.searchText)) {\n        searchSuggestionsArr.push({ label: this.state.searchResultsArr[i].review_score });\n        addToSearchResultsArr = true;\n      }\n      if (addToSearchResultsArr) searchResultsArr.push(this.state.searchResultsArr);\n    }\n  }\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n    const searchResultsArr = [];\n\n    axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/')\n      .then((res) => {\n        console.log(res.data.results);\n        for (let i = 0; i <= res.data.results.length - 1; i++) {\n          if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n        }\n        //display top 100 books whose score are higher than 75\n        //if there are more than 100 results take the highest scores\n        if (searchResultsArr.length > 100) {\n          searchResultsArr.sort((a, b) => {\n            if (a.review_score < b.review_score)\n              return -1;\n            if (a.review_score > b.review_score)\n              return 1;\n            return 0;\n          })\n          //cut off elements not in highest 100 scores\n          searchResultsArr.splice(100);\n        }\n        //this is to sort by title\n        searchResultsArr.sort((a, b) => {\n          if (a.title < b.title)\n            return -1;\n          if (a.title > b.title)\n            return 1;\n          return 0;\n        })\n\n        this.setState({ searchResultsArr });\n\n        console.log(this.state.searchResultsArr);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React!</h1>\n          <Select\n            value={this.state.searchText}\n            onChange={(e) => {this.setState({ searchText : e.target.value }); console.log(this.state.searchText);}}\n            options={this.state.searchSuggestionsArr}\n          />\n        </header>\n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n    );\n  }\n}\n// <Autocomplete\n//   getItemValue={(item) => item.label}\n//   items={this.state.searchSuggestionsArr}\n//   renderItem={(item, isHighlighted) =>\n//     <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n//       {item.label}\n//     </div>\n//   }\n//   value={this.state.searchText}\n//   onChange={(e) => {this.setState({ searchText : e.target.value }); console.log(this.state.searchText);}}\n//   onSelect={(val) => this.setState({ searchText : val })}\n//   />\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}