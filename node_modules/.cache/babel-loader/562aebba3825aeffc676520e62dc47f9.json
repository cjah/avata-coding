{"ast":null,"code":"import _regeneratorRuntime from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/NukeZ/avata-coding-challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      selectedOption: '',\n      searchSuggestionsArr: [],\n      searchResultsArr: []\n    };\n\n    _this.buildSearchSuggestionsArr = function () {\n      var searchSuggestionsArr = [];\n      var noAutoCompleteDuplicateObj = {};\n\n      for (var i = 1; i <= _this.state.searchResultsArr.length - 1; i++) {\n        //this is to prevent duplicate auto suggestions\n        if (!noAutoCompleteDuplicateObj[_this.state.searchResultsArr[i].author]) {\n          searchSuggestionsArr.push({\n            label: 'Author: ' + (_this.state.searchResultsArr[i].author || 'Anonymous'),\n            value: _this.state.searchResultsArr[i].author\n          });\n          noAutoCompleteDuplicateObj[_this.state.searchResultsArr[i].author] = []; //this is to bundle all books by the same author together incase we need it later\n        } else noAutoCompleteDuplicateObj[_this.state.searchResultsArr[i].author].push(_this.state.searchResultsArr[i]);\n\n        searchSuggestionsArr.push({\n          label: 'Title: ' + _this.state.searchResultsArr[i].title,\n          value: _this.state.searchResultsArr[i].title\n        }); //this is to prevent duplicate auto suggestions\n\n        if (!noAutoCompleteDuplicateObj[_this.state.searchResultsArr[i].review_score]) {\n          searchSuggestionsArr.push({\n            label: 'Review Score: ' + _this.state.searchResultsArr[i].review_score,\n            value: _this.state.searchResultsArr[i].review_score\n          });\n          noAutoCompleteDuplicateObj[_this.state.searchResultsArr[i].review_score] = []; //this is to bundle all books with the same review score together incase we need it later\n        } else noAutoCompleteDuplicateObj[_this.state.searchResultsArr[i].review_score].push(_this.state.searchResultsArr[i]); // if (addToSearchResultsArr) searchResultsArr.push(this.state.searchResultsArr[i]);\n\n      }\n\n      console.log('searchSuggestionsArr', searchSuggestionsArr);\n      console.log('searchResultsArr', _this.state.searchResultsArr);\n\n      _this.setState({\n        searchSuggestionsArr: searchSuggestionsArr\n      });\n    };\n\n    _this.onChangeInput = function (e) {\n      _this.setState({\n        selectedOption: e.target.value\n      });\n    };\n\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, searchResultsArr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/express_backend');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n              searchResultsArr = [];\n              axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/').then(function (res) {\n                console.log(res.data.results);\n\n                for (var i = 0; i <= res.data.results.length - 1; i++) {\n                  if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n                } //display top 100 books whose score are higher than 75\n                //if there are more than 100 results take the highest scores\n\n\n                if (searchResultsArr.length > 100) {\n                  searchResultsArr.sort(function (a, b) {\n                    if (a.review_score < b.review_score) return -1;\n                    if (a.review_score > b.review_score) return 1;\n                    return 0;\n                  }); //cut off elements not in highest 100 scores\n\n                  searchResultsArr.splice(100);\n                } //this is to sort by title\n\n\n                searchResultsArr.sort(function (a, b) {\n                  if (a.title < b.title) return -1;\n                  if (a.title > b.title) return 1;\n                  return 0;\n                });\n\n                _this.setState({\n                  searchResultsArr: searchResultsArr\n                });\n\n                _this.buildSearchSuggestionsArr();\n\n                console.log(_this.state.searchResultsArr);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n              if (!(response.status !== 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 10:\n              return _context.abrupt(\"return\", body);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    // onChange={this.setState({ selectedOption : this.state.selectedOption }); console.log(this.state.selectedOption);}}\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Top Rated Books!\")), React.createElement(\"div\", {\n        onKeyUp: this.onChangeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: this.state.selectedOption,\n        onChange: this.handleChange,\n        options: this.state.searchSuggestionsArr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component); // <p className=\"App-intro\">{this.state.data}</p>\n\n\nexport default App;","map":{"version":3,"sources":["/Users/NukeZ/avata-coding-challenge/client/src/App.js"],"names":["React","Component","axios","Select","App","state","data","selectedOption","searchSuggestionsArr","searchResultsArr","buildSearchSuggestionsArr","noAutoCompleteDuplicateObj","i","length","author","push","label","value","title","review_score","console","log","setState","onChangeInput","e","target","callBackendAPI","fetch","response","json","body","post","then","res","results","sort","a","b","splice","catch","error","status","Error","message","handleChange","express","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: null,\n    selectedOption: '',\n    searchSuggestionsArr: [],\n    searchResultsArr: [],\n  };\n\n  // this.onChangeInput = this.onChangeInput.bind(this);\n\n  buildSearchSuggestionsArr = () => {\n    const searchSuggestionsArr = [];\n    const noAutoCompleteDuplicateObj = {};\n\n    for (let i = 1; i <= this.state.searchResultsArr.length - 1; i++) {\n\n      //this is to prevent duplicate auto suggestions\n      if (!noAutoCompleteDuplicateObj[this.state.searchResultsArr[i].author]) {\n        searchSuggestionsArr.push({ label: 'Author: ' + (this.state.searchResultsArr[i].author || 'Anonymous'), value: this.state.searchResultsArr[i].author });\n        noAutoCompleteDuplicateObj[this.state.searchResultsArr[i].author] = [];\n        //this is to bundle all books by the same author together incase we need it later\n      } else noAutoCompleteDuplicateObj[this.state.searchResultsArr[i].author].push(this.state.searchResultsArr[i]);\n\n      searchSuggestionsArr.push({ label: 'Title: ' + this.state.searchResultsArr[i].title, value: this.state.searchResultsArr[i].title });\n\n      //this is to prevent duplicate auto suggestions\n      if (!noAutoCompleteDuplicateObj[this.state.searchResultsArr[i].review_score]) {\n        searchSuggestionsArr.push({ label: 'Review Score: ' + this.state.searchResultsArr[i].review_score, value: this.state.searchResultsArr[i].review_score });\n        noAutoCompleteDuplicateObj[this.state.searchResultsArr[i].review_score] = [];\n        //this is to bundle all books with the same review score together incase we need it later\n      } else noAutoCompleteDuplicateObj[this.state.searchResultsArr[i].review_score].push(this.state.searchResultsArr[i]);\n\n      // if (addToSearchResultsArr) searchResultsArr.push(this.state.searchResultsArr[i]);\n    }\n\n    console.log('searchSuggestionsArr', searchSuggestionsArr);\n    console.log('searchResultsArr', this.state.searchResultsArr);\n\n    this.setState({ searchSuggestionsArr });\n  }\n\n  onChangeInput = (e) => {\n    this.setState({ selectedOption: e.target.value });\n  }\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n    const searchResultsArr = [];\n\n    axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/')\n      .then((res) => {\n        console.log(res.data.results);\n        for (let i = 0; i <= res.data.results.length - 1; i++) {\n          if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n        }\n        //display top 100 books whose score are higher than 75\n        //if there are more than 100 results take the highest scores\n        if (searchResultsArr.length > 100) {\n          searchResultsArr.sort((a, b) => {\n            if (a.review_score < b.review_score)\n              return -1;\n            if (a.review_score > b.review_score)\n              return 1;\n            return 0;\n          })\n          //cut off elements not in highest 100 scores\n          searchResultsArr.splice(100);\n        }\n        //this is to sort by title\n        searchResultsArr.sort((a, b) => {\n          if (a.title < b.title)\n            return -1;\n          if (a.title > b.title)\n            return 1;\n          return 0;\n        })\n\n        this.setState({ searchResultsArr });\n\n        this.buildSearchSuggestionsArr();\n\n        console.log(this.state.searchResultsArr);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n  }\n  // onChange={this.setState({ selectedOption : this.state.selectedOption }); console.log(this.state.selectedOption);}}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Top Rated Books!</h1>\n        </header>\n        <div onKeyUp={this.onChangeInput}>\n          <Select\n            value={this.state.selectedOption}\n            onChange={this.handleChange}\n            options={this.state.searchSuggestionsArr}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n// <p className=\"App-intro\">{this.state.data}</p>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}