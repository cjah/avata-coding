{"ast":null,"code":"import _regeneratorRuntime from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/NukeZ/avata-coding-challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Autocomplete from 'react-autocomplete';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      searchText: '',\n      searchSuggestionsArr: [{\n        label: 'apple'\n      }, {\n        label: 'banana'\n      }, {\n        label: 'pear'\n      }]\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, searchResultsArr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/express_backend');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n              searchResultsArr = [];\n              axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/').then(function (res) {\n                console.log(res.data.results);\n\n                for (var i = 0; i <= res.data.results.length - 1; i++) {\n                  if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n                }\n\n                searchResultsArr.sort(function (a, b) {\n                  if (a.review_score < b.review_score) return 1;\n                  if (a.review_score > b.review_score) return -1;\n                  return 0;\n                });\n                console.log(searchResultsArr);\n              }).catch(function (error) {\n                console.log(error);\n              });\n              console.log('gottems');\n\n              if (!(response.status !== 200)) {\n                _context.next = 11;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 11:\n              return _context.abrupt(\"return\", body);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Welcome to React!\")), React.createElement(Autocomplete, {\n        getItemValue: function getItemValue(item) {\n          return item.label;\n        },\n        items: this.state.searchSuggestionsArr,\n        renderItem: function renderItem(item, isHighlighted) {\n          return React.createElement(\"div\", {\n            style: {\n              background: isHighlighted ? 'lightgray' : 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, item.label);\n        },\n        value: this.state.searchText,\n        onChange: function onChange(e) {\n          _this3.setState({\n            searchText: e.target.value\n          });\n\n          console.log(_this3.state.searchText);\n        },\n        onSelect: function onSelect(val) {\n          return _this3.setState({\n            searchText: val\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.data));\n    }\n  }]);\n\n  return App;\n}(Component); // Render the newly fetched data inside of this.state.data\n\n\nexport default App;","map":{"version":3,"sources":["/Users/NukeZ/avata-coding-challenge/client/src/App.js"],"names":["React","Component","axios","Autocomplete","App","state","data","searchText","searchSuggestionsArr","label","callBackendAPI","fetch","response","json","body","searchResultsArr","post","then","res","console","log","results","i","length","review_score","push","sort","a","b","catch","error","status","Error","message","setState","express","err","logo","item","isHighlighted","background","e","target","value","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Autocomplete from 'react-autocomplete';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\nstate = {\n    data: null,\n    searchText: '',\n    searchSuggestionsArr: [\n      { label: 'apple' },\n      { label: 'banana' },\n      { label: 'pear' }\n    ],\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n    const searchResultsArr = [];\n\n    axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/')\n      .then((res) => {\n        console.log(res.data.results);\n        for (let i = 0; i <= res.data.results.length - 1; i++) {\n          if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n        }\n\n        searchResultsArr.sort((a, b) => {\n          if (a.review_score < b.review_score)\n            return 1;\n          if (a.review_score > b.review_score)\n            return -1;\n          return 0;\n        })\n        console.log(searchResultsArr);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    console.log('gottems');\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React!</h1>\n        </header>\n        <Autocomplete\n          getItemValue={(item) => item.label}\n          items={this.state.searchSuggestionsArr}\n          renderItem={(item, isHighlighted) =>\n            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n              {item.label}\n            </div>\n          }\n          value={this.state.searchText}\n          onChange={(e) => {this.setState({ searchText : e.target.value }); console.log(this.state.searchText);}}\n          onSelect={(val) => this.setState({ searchText : val })}\n        />\n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n    );\n  }\n}\n// Render the newly fetched data inside of this.state.data\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}