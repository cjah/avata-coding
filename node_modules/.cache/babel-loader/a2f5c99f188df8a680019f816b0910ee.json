{"ast":null,"code":"import _regeneratorRuntime from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/NukeZ/avata-coding-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/NukeZ/avata-coding-challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null,\n      selectedOption: '',\n      searchSuggestionsArr: [],\n      searchResultsArr: [],\n      noAutoCompleteDuplicateObj: {},\n      barData: [],\n      barLabels: [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100],\n      doughnutLabels: ['1 book', '2 books', '3 books+'],\n      doughnutData: []\n    };\n\n    _this.buildSearchSuggestionsArr = function () {\n      var searchSuggestionsArr = [];\n      var noAutoCompleteDuplicateObj = {};\n      var authorBookCountObj = {};\n      var searchResultsArr = _this.state.searchResultsArr;\n\n      for (var i = 1; i <= searchResultsArr.length - 1; i++) {\n        //this is to prevent duplicate auto suggestions\n        if (!noAutoCompleteDuplicateObj[searchResultsArr[i].author]) {\n          searchSuggestionsArr.push({\n            label: 'Author: ' + (searchResultsArr[i].author || 'Anonymous'),\n            value: searchResultsArr[i].author,\n            type: 'author'\n          });\n          noAutoCompleteDuplicateObj[searchResultsArr[i].author] = [];\n          authorBookCountObj[searchResultsArr[i].author] = 0;\n        } //assuming no duplicate titles\n\n\n        if (!noAutoCompleteDuplicateObj[searchResultsArr[i].title]) {\n          searchSuggestionsArr.push({\n            label: 'Title: ' + searchResultsArr[i].title,\n            value: searchResultsArr[i].title,\n            type: 'title'\n          });\n          noAutoCompleteDuplicateObj[searchResultsArr[i].title] = [];\n        } //this is to prevent duplicate auto suggestions\n\n\n        if (!noAutoCompleteDuplicateObj[searchResultsArr[i].review_score]) {\n          searchSuggestionsArr.push({\n            label: 'Review Score: ' + searchResultsArr[i].review_score,\n            value: searchResultsArr[i].review_score,\n            type: 'review_score'\n          });\n          noAutoCompleteDuplicateObj[searchResultsArr[i].review_score] = [];\n        } //this is to bundle all books with the same author or review score together so we can filter results\n\n\n        noAutoCompleteDuplicateObj[searchResultsArr[i].author].push(searchResultsArr[i]);\n        noAutoCompleteDuplicateObj[searchResultsArr[i].title].push(searchResultsArr[i]);\n        noAutoCompleteDuplicateObj[searchResultsArr[i].review_score].push(searchResultsArr[i]); //this is to count authors books\n\n        authorBookCountObj[searchResultsArr[i].author]++;\n      } // for (let key in noAutoCompleteDuplicateObj) {\n      //   if (noAutoCompleteDuplicateObj[key][0].type === 'author') {\n      //     authorBookCountObj\n      //   }\n      // }\n\n\n      console.log('authorBookCountObj', authorBookCountObj);\n\n      var barData = _this.state.barLabels.map(function (label) {\n        return noAutoCompleteDuplicateObj[label] ? noAutoCompleteDuplicateObj[label].length : 0;\n      });\n\n      _this.setState({\n        searchSuggestionsArr: searchSuggestionsArr,\n        noAutoCompleteDuplicateObj: noAutoCompleteDuplicateObj,\n        barData: barData\n      });\n    };\n\n    _this.onChangeInput = function (e) {\n      _this.setState({\n        selectedOption: e.target.value\n      });\n    };\n\n    _this.getBooks =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var searchResultsArr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchResultsArr = [];\n              axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/').then(function (res) {\n                //filter book results whose score are higher than 75\n                for (var i = 0; i <= res.data.results.length - 1; i++) {\n                  if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n                } //if there are more than 100 results take the highest scores\n\n\n                if (searchResultsArr.length > 100) {\n                  searchResultsArr.sort(function (a, b) {\n                    if (a.review_score < b.review_score) return -1;\n                    if (a.review_score > b.review_score) return 1;\n                    return 0;\n                  }); //cut off elements not in highest 100 scores\n\n                  searchResultsArr.splice(100);\n                } //this is to sort by title\n\n\n                searchResultsArr.sort(function (a, b) {\n                  if (a.title < b.title) return -1;\n                  if (a.title > b.title) return 1;\n                  return 0;\n                });\n\n                _this.setState({\n                  searchResultsArr: searchResultsArr\n                });\n\n                _this.buildSearchSuggestionsArr();\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption,\n        searchResultsArr: _this.state.noAutoCompleteDuplicateObj[selectedOption.value]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Once page loads hit the post request to get books\n      this.getBooks().catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //display book results\n      var resultsListItems = this.state.searchResultsArr.map(function (book, i) {\n        return React.createElement(\"li\", {\n          className: \"row\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Title: \", book.title, \" \"), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Author: \", book.author, \" \"), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Review Score: \", book.review_score, \" \"), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"Book Summary\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, book.summary));\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Top Rated Books!\")), React.createElement(\"div\", {\n        onKeyUp: this.onChangeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: this.state.selectedOption,\n        onChange: this.handleChange,\n        options: this.state.searchSuggestionsArr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Book Score Bar Graph\"), React.createElement(Bar, {\n        data: {\n          labels: this.state.barLabels,\n          datasets: [{\n            label: 'Books with this review score',\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: this.state.barData\n          }]\n        },\n        width: 100,\n        height: 50,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Author Book Count Chart\"), React.createElement(Doughnut, {\n        data: {\n          labels: this.state.doughnutLabels,\n          datasets: [{\n            data: this.state.doughnutData,\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n            hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, resultsListItems)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/NukeZ/avata-coding-challenge/client/src/App.js"],"names":["React","Component","axios","Select","Bar","Doughnut","App","state","data","selectedOption","searchSuggestionsArr","searchResultsArr","noAutoCompleteDuplicateObj","barData","barLabels","doughnutLabels","doughnutData","buildSearchSuggestionsArr","authorBookCountObj","i","length","author","push","label","value","type","title","review_score","console","log","map","setState","onChangeInput","e","target","getBooks","post","then","res","results","sort","a","b","splice","catch","error","handleChange","err","resultsListItems","book","summary","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: null,\n    selectedOption: '',\n    searchSuggestionsArr: [],\n    searchResultsArr: [],\n    noAutoCompleteDuplicateObj: {},\n    barData: [],\n    barLabels: [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100],\n    doughnutLabels: [\n      '1 book',\n      '2 books',\n      '3 books+'\n    ],\n    doughnutData: []\n  };\n\n  buildSearchSuggestionsArr = () => {\n    const searchSuggestionsArr = [];\n    const noAutoCompleteDuplicateObj = {};\n    const authorBookCountObj = {};\n    const searchResultsArr = this.state.searchResultsArr;\n\n    for (let i = 1; i <= searchResultsArr.length - 1; i++) {\n\n      //this is to prevent duplicate auto suggestions\n      if (!noAutoCompleteDuplicateObj[searchResultsArr[i].author]) {\n        searchSuggestionsArr.push({ label: 'Author: ' + (searchResultsArr[i].author || 'Anonymous'), value: searchResultsArr[i].author, type: 'author' });\n        noAutoCompleteDuplicateObj[searchResultsArr[i].author] = [];\n        authorBookCountObj[searchResultsArr[i].author] = 0;\n      }\n\n      //assuming no duplicate titles\n      if (!noAutoCompleteDuplicateObj[searchResultsArr[i].title]) {\n        searchSuggestionsArr.push({ label: 'Title: ' + searchResultsArr[i].title, value: searchResultsArr[i].title, type: 'title' });\n        noAutoCompleteDuplicateObj[searchResultsArr[i].title] = [];\n      }\n\n      //this is to prevent duplicate auto suggestions\n      if (!noAutoCompleteDuplicateObj[searchResultsArr[i].review_score]) {\n        searchSuggestionsArr.push({ label: 'Review Score: ' + searchResultsArr[i].review_score, value: searchResultsArr[i].review_score, type: 'review_score' });\n        noAutoCompleteDuplicateObj[searchResultsArr[i].review_score] = [];\n\n      }\n\n      //this is to bundle all books with the same author or review score together so we can filter results\n      noAutoCompleteDuplicateObj[searchResultsArr[i].author].push(searchResultsArr[i]);\n      noAutoCompleteDuplicateObj[searchResultsArr[i].title].push(searchResultsArr[i]);\n      noAutoCompleteDuplicateObj[searchResultsArr[i].review_score].push(searchResultsArr[i]);\n\n      //this is to count authors books\n      authorBookCountObj[searchResultsArr[i].author]++;\n    }\n\n    // for (let key in noAutoCompleteDuplicateObj) {\n    //   if (noAutoCompleteDuplicateObj[key][0].type === 'author') {\n    //     authorBookCountObj\n    //   }\n    // }\n    console.log('authorBookCountObj', authorBookCountObj);\n\n    const barData = this.state.barLabels.map((label) => {\n      return noAutoCompleteDuplicateObj[label] ? noAutoCompleteDuplicateObj[label].length : 0;\n    })\n\n    this.setState({ searchSuggestionsArr, noAutoCompleteDuplicateObj, barData });\n  }\n\n  onChangeInput = (e) => {\n    this.setState({ selectedOption: e.target.value });\n  }\n\n  componentDidMount() {\n    // Once page loads hit the post request to get books\n    this.getBooks()\n      .catch(err => console.log(err));\n  }\n\n  getBooks = async () => {\n    const searchResultsArr = [];\n\n    axios.post('https://di37ol03g7.execute-api.us-west-2.amazonaws.com/dev/')\n      .then((res) => {\n\n        //filter book results whose score are higher than 75\n        for (let i = 0; i <= res.data.results.length - 1; i++) {\n          if (res.data.results[i].review_score > 74) searchResultsArr.push(res.data.results[i]);\n        }\n\n        //if there are more than 100 results take the highest scores\n        if (searchResultsArr.length > 100) {\n          searchResultsArr.sort((a, b) => {\n            if (a.review_score < b.review_score)\n              return -1;\n            if (a.review_score > b.review_score)\n              return 1;\n            return 0;\n          });\n\n          //cut off elements not in highest 100 scores\n          searchResultsArr.splice(100);\n        }\n\n        //this is to sort by title\n        searchResultsArr.sort((a, b) => {\n          if (a.title < b.title)\n            return -1;\n          if (a.title > b.title)\n            return 1;\n          return 0;\n        });\n\n        this.setState({ searchResultsArr });\n        this.buildSearchSuggestionsArr();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  //this is where the filtering magic happens\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption, searchResultsArr: this.state.noAutoCompleteDuplicateObj[selectedOption.value] });\n  }\n\n\n  render() {\n    //display book results\n    const resultsListItems = this.state.searchResultsArr.map((book, i) => {\n      return <li className=\"row\" key={i}>\n          <h2>Title: {book.title} </h2>\n          <h2>Author: {book.author} </h2>\n          <h2>Review Score: {book.review_score} </h2>\n          <h3>Book Summary</h3>\n          <p>{book.summary}</p>\n      </li>\n    })\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Top Rated Books!</h1>\n        </header>\n        <div onKeyUp={this.onChangeInput}>\n          <Select\n            value={this.state.selectedOption}\n            onChange={this.handleChange}\n            options={this.state.searchSuggestionsArr}\n            />\n        </div>\n        <div className=\"container\">\n          <h2>Book Score Bar Graph</h2>\n          <Bar\n            data={{\n              labels: this.state.barLabels,\n              datasets: [\n                {\n                  label: 'Books with this review score',\n                  backgroundColor: 'rgba(255,99,132,0.2)',\n                  borderColor: 'rgba(255,99,132,1)',\n                  borderWidth: 1,\n                  hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                  hoverBorderColor: 'rgba(255,99,132,1)',\n                  data: this.state.barData\n                }\n              ]\n            }}\n            width={100}\n            height={50}\n            options={{\n              maintainAspectRatio: false\n            }}\n            />\n        </div>\n        <div className=\"container\">\n          <h2>Author Book Count Chart</h2>\n          <Doughnut data={{\n              labels: this.state.doughnutLabels,\n              datasets: [{\n                data: this.state.doughnutData,\n                backgroundColor: [\n                  '#FF6384',\n                  '#36A2EB',\n                  '#FFCE56'\n                ],\n                hoverBackgroundColor: [\n                  '#FF6384',\n                  '#36A2EB',\n                  '#FFCE56'\n                ]\n              }]\n            }} />\n        </div>\n        <div>\n          <ol>\n            { resultsListItems }\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}